{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","questions","questionlabel","answeroption","answerlabel","isCorrect","useState","step","setstep","currentQuestion","setcurrentQuestion","showscore","setshowscore","score","setscore","count","setcounter","React","useEffect","timer","setInterval","clearInterval","alert","window","location","reload","className","length","onClick","id","map","nextQuestion","handleanswerbtnclick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wMAmJeA,MAhJf,WAEE,IAAMC,EAAY,CAChB,CACEC,cAAe,sCACfC,aAAc,CACZ,CAAEC,YAAa,WAAaC,WAAW,GACvC,CAAED,YAAa,QAAUC,WAAW,GACpC,CAAED,YAAa,SAAWC,WAAW,GACrC,CAAED,YAAa,WAAaC,WAAW,KAG3C,CACEH,cAAe,wDACfC,aAAc,CACZ,CAAEC,YAAa,kBAAoBC,WAAW,GAC9C,CAAED,YAAa,mBAAqBC,WAAW,GAC/C,CAAED,YAAa,gBAAkBC,WAAW,GAC5C,CAAED,YAAa,eAAiBC,WAAW,KAG/C,CACEH,cAAe,2CACfC,aAAc,CACZ,CAAEC,YAAa,QAAUC,WAAW,GACpC,CAAED,YAAa,SAAWC,WAAW,GACrC,CAAED,YAAa,YAAcC,WAAW,GACxC,CAAED,YAAa,QAAUC,WAAW,KAGxC,CACEH,cAAe,2BACfC,aAAc,CACZ,CAAEC,YAAa,cAAgBC,WAAW,GAC1C,CAAED,YAAa,YAAcC,WAAW,GACxC,CAAED,YAAa,aAAeC,WAAW,GACzC,CAAED,YAAa,aAAeC,WAAW,KAG7C,CACEH,cAAe,4BACfC,aAAc,CACZ,CAAEC,YAAa,6BAA+BC,WAAW,GACzD,CAAED,YAAa,4BAA8BC,WAAW,GACxD,CAAED,YAAa,sCAAwCC,WAAW,GAClE,CAAED,YAAa,oBAAsBC,WAAW,MA7CzC,EAiDWC,mBAAS,GAjDpB,mBAiDNC,EAjDM,KAiDAC,EAjDA,OAmDiCF,mBAAS,GAnD1C,mBAmDNG,EAnDM,KAmDWC,EAnDX,OAqDqBJ,oBAAS,GArD9B,mBAqDNK,EArDM,KAqDKC,EArDL,OAuDaN,mBAAS,GAvDtB,mBAuDNO,EAvDM,KAuDCC,EAvDD,OAyDeR,mBAAS,IAzDxB,mBAyDNS,EAzDM,KAyDCC,EAzDD,KAgGb,OAhCAC,IAAMC,WAAU,WACd,GAAY,IAATX,EAAY,CACf,IAAMY,EAAQJ,EAAQ,GACtBK,aAAY,kBAAMJ,EAAWD,EAAM,KAAI,KACrC,OAAO,kBAAMM,cAAcF,QAIlB,IAAVJ,IACDO,MAAM,8CACNC,OAAOC,SAASC,UAuBhB,qBAAKC,UAAU,MAAf,SAEGf,EACC,sBAAKe,UAAU,QAAf,UACE,qBAAKA,UAAU,QAAf,0BACE,8BAAG,gDAAH,iCACA,yCAAYb,EAAZ,WAA2BZ,EAAU0B,UACvC,wBAAQD,UAAU,UAAUE,QAAS,WAZ3CL,OAAOC,SAASC,UAYV,6BAGF,qCACa,IAATlB,GACA,sBAAKmB,UAAU,QAAf,UACI,yDACA,uDAAyB,gDAAzB,8BACA,oFACA,mFACA,sFACA,2FACA,qBAAKA,UAAU,OAAf,SAAsB,+DACxB,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,QAAQE,QA3Db,WACzBpB,EAAQ,GACRQ,EAAWD,IAyDC,6BAIK,IAATR,GACF,sBAAKmB,UAAU,WAAf,UACI,sBAAKA,UAAU,iBAAf,UACE,kDACA,sBAAKA,UAAU,QAAf,gCAA2CX,EAA3C,cACA,qBAAKW,UAAU,MAAf,SAAqB,+BAAM,+CAAkBjB,EAAkB,EAApC,IAAwCR,EAAU0B,iBAE/E,qBAAKD,UAAU,iBAAf,SAAiCzB,EAAUQ,GAAiBP,gBAE9D,qBAAKwB,UAAU,SAASG,GAAG,SAA3B,SACG5B,EAAUQ,GAAiBN,aAAa2B,KAAI,SAAC3B,GAAD,OAC7C,wBAAQyB,QAAS,kBAvDA,SAACvB,IACX,IAAdA,GACDS,EAASD,EAAQ,GAErB,IAAMkB,EAAetB,EAAkB,EAChCsB,EAAe9B,EAAU0B,OACxBjB,EAAmBqB,IAEnBnB,GAAa,GACbI,GAAW,IA8CegB,CAAqB7B,EAAaE,YAAxD,SAAqEF,EAAaC,4BC5HjF6B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.4bd927eb.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  /* JS quiz Questions */\n  const questions = [\n    {\n      questionlabel: 'What is the capital of Philippines?',\n      answeroption: [\n        { answerlabel: 'New york' , isCorrect: false },\n        { answerlabel: 'Paris' , isCorrect: false },\n        { answerlabel: 'Manila' , isCorrect: true },\n        { answerlabel: 'Shanghai' , isCorrect: false },\n      ],\n    },\n    {\n      questionlabel: 'Who is the Philippine president declared martial Law?',\n      answeroption: [\n        { answerlabel: 'Rudrigo Duterte' , isCorrect: false },\n        { answerlabel: 'Ferdinand Marcos' , isCorrect: true },\n        { answerlabel: 'Manual Quezon' , isCorrect: false },\n        { answerlabel: 'Ninoy Aquino' , isCorrect: false },\n      ],\n    },\n    {\n      questionlabel: 'The Iphone was created by which company?',\n      answeroption: [\n        { answerlabel: 'Intel' , isCorrect: false },\n        { answerlabel: 'Amazon' , isCorrect: false },\n        { answerlabel: 'Microsoft' , isCorrect: false },\n        { answerlabel: 'Apple' , isCorrect: true },\n      ],\n    },\n    {\n      questionlabel: 'Who is the CEO of Tesla?',\n      answeroption: [\n        { answerlabel: 'Jheff Bezos' , isCorrect: false },\n        { answerlabel: 'Elon Musk' , isCorrect: true },\n        { answerlabel: 'Bill Gates' , isCorrect: false },\n        { answerlabel: 'Tony Stark' , isCorrect: false },\n      ],\n    },\n    {\n      questionlabel: 'What does HTML stand for?',\n      answeroption: [\n        { answerlabel: 'Hyper Text Markup Language' , isCorrect: true },\n        { answerlabel: 'Home Tool Markup Language' , isCorrect: false },\n        { answerlabel: 'Hyperlinks and Text Markup Language' , isCorrect: false },\n        { answerlabel: 'Hyper Task Markup' , isCorrect: false },\n      ],\n    },\n  ];\n  const [step, setstep] = useState(1);\n  /* If the user click the button */\n  const [currentQuestion, setcurrentQuestion] = useState(0);\n  /* When the user done answering the questions it shows the result */\n  const [showscore, setshowscore] = useState(false);\n  /* User's score out of 5 questions */\n  const [score, setscore] = useState(0);\n  /* Start timer */\n  const [count, setcounter] = useState(90);\n  /* When button click will move to actual quiz */\n  const handlestepbtnclick = () =>{\n    setstep(2);\n    setcounter(count);\n  }\n  /* Setting timer on quiz start */\n  React.useEffect(() => {\n    if(step === 2 ){\n    const timer = count > 0 && \n    setInterval(() => setcounter(count-1), 1000);\n      return () => clearInterval(timer);\n    }\n  });\n  /* If the user did not finish the quiz and it reached to 0 then the alert message will popup */\n  if(count === 0){\n    alert('Your time is up! Click Ok to restart quiz.');\n    window.location.reload();\n  }\n\n  /* When user click the button of choosen answer */\n  const handleanswerbtnclick = (isCorrect) => {\n    if(isCorrect === true){\n      setscore(score + 1);\n    }\n  const nextQuestion = currentQuestion + 1;\n      if(nextQuestion < questions.length){\n          setcurrentQuestion(nextQuestion);\n      }else{\n          setshowscore(true);\n          setcounter(false);\n      }\n  };\n\n  const restart = () => {\n    window.location.reload();\n  }\n      \n\n  return (\n    <div className=\"App\">\n      {/* Uses logic, after the quiz finish then automatically will show the result in only 1 file. */}\n      {showscore ? (\n        <div className='score'>\n          <div className='crown'>&#128081;</div>\n            <p><b>Congatulations!</b> You've completed the quiz.</p> \n            <p>You got {score} out of {questions.length}</p>\n          <button className='restart' onClick={()=> restart()}>Restart Quiz</button>\n        </div>\n      ) : (\n        <>\n          { step === 1 &&\n            <div className='rules'>\n                <h3>Quiz Rules &#129409;</h3>\n                <p>1. You will have only <strong>90 seconds</strong> to answer all question.</p>\n                <p>2. Once you select your answer, it can't be undone.</p>\n                <p>3. You can't select any option once time goes off.</p>\n                <p>4. You can't exit from the quiz while you're playing.</p>\n                <p>5. You'll get points on the basis of your correct answers.</p>\n                <div className='luck'><strong>Good Luck! &#128512;</strong></div>\n              <div className='start-quiz'>\n                <button className='start' onClick={handlestepbtnclick}>Start Quiz</button>\n              </div>\n            </div>\n          }\n          { step === 2 &&\n          <div className='question'>\n              <div className='question-count'>\n                <h2>Awesome Quiz App</h2>\n                <div className='timer'>Your time ends in: {count} seconds</div>\n                <div className='que'><span><strong>Question {currentQuestion + 1}/{questions.length}</strong></span></div>\n              </div>\n              <div className='question-label'>{questions[currentQuestion].questionlabel}</div>\n          \n            <div className='answer' id='answer'>\n              {questions[currentQuestion].answeroption.map((answeroption) => \n              <button onClick={()=> handleanswerbtnclick(answeroption.isCorrect)}>{answeroption.answerlabel}</button>\n              )} \n            </div>\n          </div>\n          }\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}